const express = require('express');
const cors = require('cors');
const { Client } = require('@gradio/client');
require('dotenv').config();

const app = express();
app.use(cors());
app.use(express.json());

// Initialize the Gradio client for the Stable Diffusion model
const client = await Client.connect("stabilityai/stable-diffusion");

// Route to generate the card with image
app.post('/generate-card', async (req, res) => {
  try {
    // Get the prompt from the request body
    const userPrompt = req.body.prompt || 'A beautiful landscape at sunset';

    // Call the Hugging Face Stable Diffusion API via Gradio client
    const result = await client.predict("/infer", {
      prompt: userPrompt,
      negative: "",  // You can adjust this if you want negative prompts
      scale: 7,  // Adjust guidance scale if needed
    });

    // Assuming the result has the image data
    const generatedImageUrl = result.data[0].url;

    // Send back the generated image and backstory (or use default)
    res.json({
      nameAndBackstory: userPrompt,  // This could be the backstory generated by GPT
      imageUrl: generatedImageUrl,
    });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Failed to generate card' });
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`âœ… Server running on port ${PORT}`));
